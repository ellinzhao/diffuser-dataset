%++++++++++++++++++++++++++++++++++++++++
% Don't modify this section unless you know what you're doing!
\documentclass[letterpaper,12pt]{article}
\usepackage{tabularx} % extra features for tabular environment
\usepackage{comment}
\usepackage{amsmath}  % improve math presentation
\usepackage{graphicx} % takes care of graphic including machinery
\usepackage[margin=1in,letterpaper]{geometry} % decreases margins
\usepackage{cite} % takes care of citations
\usepackage[final]{hyperref} % adds hyper links inside the generated pdf file
\usepackage{amssymb}
\hypersetup{
	colorlinks=true,       % false: boxed links; true: colored links
	linkcolor=blue,        % color of internal links
	citecolor=blue,        % color of links to bibliography
	filecolor=magenta,     % color of file links
	urlcolor=blue         
}
%++++++++++++++++++++++++++++++++++++++++


\begin{document}

\title{DiffuserCam Dataset Generation}
\author{Ellin Zhao}
\date{April 30, 2018}
\maketitle


\section{Introduction}

For this specific dataset for the DiffuserCam project, the goal was to generate volumes 
with point sources. This was done using the \texttt{numPy} and \texttt{sciPy} libraries.


\section{Code}

The \texttt{Volume} object is defined in \texttt{volume.py}. A \texttt{Volume} contains 
an array with points created by first masking with a \texttt{np.ogrid} and then filtering 
using \texttt{scipy.ndimage.gaussian\_filter}. The dimensions of the volume, radii and density of points and blur can all be tuned via the parameters to the constructor. 

\texttt{volume.py} also provides functions to assist in tuning parameters and in 
\texttt{gen\_outputs.py}, there are examples of how to use these functions. Essentially,
these functions save image and video files of a \texttt{Volume} with specific parameters.
For images and videos of volumes, see these \href{https://goo.gl/87enx2}{slides} 
and for the code, see this \href{https://github.com/ellinzhao/diffuser-dataset}{repo}.


\section{Usage}

Call the \texttt{gen\_outputs($\cdot$)} method in \texttt{gen\_outputs.py} to generate and save volumes. Given parameters \texttt{num\_imgs}, \texttt{n}, \texttt{r},
\texttt{percent\_range}, \texttt{sigma}, the following \texttt{.npy} files will be saved:

\begin{center}
\begin{tabular}{ |l|l|l| } 
 \hline
 File & Description & Dimensions \\ \hline
 \texttt{data\_2D} & flattened projections of each volume & $n^2 \times$ num\_imgs \\ \hline
 \texttt{data\_3D} & flattened volumes & $n^3 \times$ num\_imgs \\ \hline
 \texttt{labels\_0},...,\texttt{labels\_n} & centers for each volume & num\_points $\times$ 3 \\ \hline
\end{tabular}
\end{center}

\texttt{gen\_outputs.py} provides an example of how to call the function. At the moment,
you must call the function in a Python file, then run the file from the command line. 


\end{document}

